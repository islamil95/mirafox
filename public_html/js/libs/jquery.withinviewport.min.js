/**
 * Within Viewport jQuery Plugin
 *
 * @description Companion plugin for withinviewport.js - determines whether an element is completely within the browser viewport
 * @author      Craig Patik, http://patik.com/
 * @version     2.0.0
 * @date        2016-12-19
 */
!function(t){t.fn.withinviewport=function(e){var o,n;return"string"==typeof e&&(e={sides:e}),o=t.extend({},e,{sides:"all"}),n=[],this.each(function(){withinviewport(this,o)&&n.push(this)}),t(n)},t.extend(t.expr[":"],{"within-viewport":function(t){return withinviewport(t,"all")}}),t.fn.withinviewporttop=function(e){var o,n;return"string"==typeof e&&(e={sides:e}),o=t.extend({},e,{sides:"top"}),n=[],this.each(function(){withinviewport(this,o)&&n.push(this)}),t(n)},t.fn.withinviewportright=function(e){var o,n;return"string"==typeof e&&(e={sides:e}),o=t.extend({},e,{sides:"right"}),n=[],this.each(function(){withinviewport(this,o)&&n.push(this)}),t(n)},t.fn.withinviewportbottom=function(e){var o,n;return"string"==typeof e&&(e={sides:e}),o=t.extend({},e,{sides:"bottom"}),n=[],this.each(function(){withinviewport(this,o)&&n.push(this)}),t(n)},t.fn.withinviewportleft=function(e){var o,n;return"string"==typeof e&&(e={sides:e}),o=t.extend({},e,{sides:"left"}),n=[],this.each(function(){withinviewport(this,o)&&n.push(this)}),t(n)},t.extend(t.expr[":"],{"within-viewport-top":function(t){return withinviewport(t,"top")},"within-viewport-right":function(t){return withinviewport(t,"right")},"within-viewport-bottom":function(t){return withinviewport(t,"bottom")},"within-viewport-left":function(t){return withinviewport(t,"left")}})}(jQuery);